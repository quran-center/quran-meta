{"version":3,"file":"quran-meta.js","sources":["../src/const.ts","../src/lists/surahList.ts","../src/getSurahMeta.ts","../src/getAyaCountinSura.ts","../src/validation.ts","../src/ayaStringSplitter.ts","../src/findAyaidBySurah.ts","../src/lists/juzList.ts","../src/findJuzByAyaid.ts","../src/findJuz.ts","../src/findSurahByAyaid.ts","../src/findJuzAndShift.ts","../src/lists/hizbList.ts","../src/findJuzHizbByAyaid.ts","../src/findJuzHizb.ts","../src/findJuzMetaBySurah.ts","../src/lists/pageList.ts","../src/findPage.ts","../src/findRangeAroundAyah.ts","../src/utils.ts","../src/isAyahJuzFirst.ts","../src/isAyahPageFirst.ts","../src/lists/manzilList.ts","../src/lists/rukuList.ts","../src/lists/sajdaList.ts","../src/nextAyah.ts","../src/pageMeta.ts","../src/prevAyah.ts","../src/i18n/sura.en.ts","../src/i18n/sura.ru.ts"],"sourcesContent":["export type QuranMeta = {\n  numAyas: number\n  numSuras: number\n  numPages: number\n  numJuzs: number\n  manzilCount: number\n}\n\nexport const meta: Readonly<QuranMeta> = Object.freeze({\n  numAyas: 6236,\n  numSuras: 114,\n  numPages: 604,\n  numJuzs: 30,\n  manzilCount: 7\n})\n","import { SurahMeta } from \"../types\"\n\nexport const SuraList: SurahMeta[] = [\n  [-1, -1, -1, -1, \"\", false, -1],\n  [0, 7, 5, 1, \"الفاتحة\", true, 1],\n  [7, 286, 87, 40, \"البقرة\", false, 2],\n  [293, 200, 89, 20, \"آل عمران\", false, 50],\n  [493, 176, 92, 24, \"النساء\", false, 77],\n  [669, 120, 112, 16, \"المائدة\", false, 107],\n  [789, 165, 55, 20, \"الأنعام\", true, 128],\n  [954, 206, 39, 24, \"الأعراف\", true, 151],\n  [1160, 75, 88, 10, \"الأنفال\", false, 177],\n  [1235, 129, 113, 16, \"التوبة\", false, 187],\n  [1364, 109, 51, 11, \"يونس\", true, 208],\n  [1473, 123, 52, 10, \"هود\", true, 222],\n  [1596, 111, 53, 12, \"يوسف\", true, 236],\n  [1707, 43, 96, 6, \"الرعد\", false, 249],\n  [1750, 52, 72, 7, \"ابراهيم\", true, 256],\n  [1802, 99, 54, 6, \"الحجر\", true, 262],\n  [1901, 128, 70, 16, \"النحل\", true, 268],\n  [2029, 111, 50, 12, \"الإسراء\", true, 282],\n  [2140, 110, 69, 12, \"الكهف\", true, 294],\n  [2250, 98, 44, 6, \"مريم\", true, 305],\n  [2348, 135, 45, 8, \"طه\", true, 313],\n  [2483, 112, 73, 7, \"الأنبياء\", true, 322],\n  [2595, 78, 103, 10, \"الحج\", false, 332],\n  [2673, 118, 74, 6, \"المؤمنون\", true, 342],\n  [2791, 64, 102, 9, \"النور\", false, 350],\n  [2855, 77, 42, 6, \"الفرقان\", true, 360],\n  [2932, 227, 47, 11, \"الشعراء\", true, 367],\n  [3159, 93, 48, 7, \"النمل\", true, 377],\n  [3252, 88, 49, 8, \"القصص\", true, 386],\n  [3340, 69, 85, 7, \"العنكبوت\", true, 397],\n  [3409, 60, 84, 6, \"الروم\", true, 405],\n  [3469, 34, 57, 3, \"لقمان\", true, 411],\n  [3503, 30, 75, 3, \"السجدة\", true, 415],\n  [3533, 73, 90, 9, \"الأحزاب\", false, 418],\n  [3606, 54, 58, 6, \"سبإ\", true, 428],\n  [3660, 45, 43, 5, \"فاطر\", true, 435],\n  [3705, 83, 41, 5, \"يس\", true, 441],\n  [3788, 182, 56, 5, \"الصافات\", true, 446],\n  [3970, 88, 38, 5, \"ص\", true, 453],\n  [4058, 75, 59, 8, \"الزمر\", true, 459],\n  [4133, 85, 60, 9, \"غافر\", true, 468],\n  [4218, 54, 61, 6, \"فصلت\", true, 477],\n  [4272, 53, 62, 5, \"الشورى\", true, 483],\n  [4325, 89, 63, 7, \"الزخرف\", true, 490],\n  [4414, 59, 64, 3, \"الدخان\", true, 496],\n  [4473, 37, 65, 4, \"الجاثية\", true, 499],\n  [4510, 35, 66, 4, \"الأحقاف\", true, 503],\n  [4545, 38, 95, 4, \"محمد\", false, 507],\n  [4583, 29, 111, 4, \"الفتح\", false, 511],\n  [4612, 18, 106, 2, \"الحجرات\", false, 516],\n  [4630, 45, 34, 3, \"ق\", true, 518],\n  [4675, 60, 67, 3, \"الذاريات\", true, 521],\n  [4735, 49, 76, 2, \"الطور\", true, 524],\n  [4784, 62, 23, 3, \"النجم\", true, 526],\n  [4846, 55, 37, 3, \"القمر\", true, 529],\n  [4901, 78, 97, 3, \"الرحمن\", false, 532],\n  [4979, 96, 46, 3, \"الواقعة\", true, 535],\n  [5075, 29, 94, 4, \"الحديد\", false, 538],\n  [5104, 22, 105, 3, \"المجادلة\", false, 542],\n  [5126, 24, 101, 3, \"الحشر\", false, 546],\n  [5150, 13, 91, 2, \"الممتحنة\", false, 549],\n  [5163, 14, 109, 2, \"الصف\", false, 552],\n  [5177, 11, 110, 2, \"الجمعة\", false, 553],\n  [5188, 11, 104, 2, \"المنافقون\", false, 555],\n  [5199, 18, 108, 2, \"التغابن\", false, 556],\n  [5217, 12, 99, 2, \"الطلاق\", false, 558],\n  [5229, 12, 107, 2, \"التحريم\", false, 560],\n  [5241, 30, 77, 2, \"الملك\", true, 562],\n  [5271, 52, 2, 2, \"القلم\", true, 565],\n  [5323, 52, 78, 2, \"الحاقة\", true, 567],\n  [5375, 44, 79, 2, \"المعارج\", true, 569],\n  [5419, 28, 71, 2, \"نوح\", true, 571],\n  [5447, 28, 40, 2, \"الجن\", true, 572],\n  [5475, 20, 3, 2, \"المزمل\", true, 574],\n  [5495, 56, 4, 2, \"المدثر\", true, 576],\n  [5551, 40, 31, 2, \"القيامة\", true, 578],\n  [5591, 31, 98, 2, \"الانسان\", false, 579],\n  [5622, 50, 33, 2, \"المرسلات\", true, 581],\n  [5672, 40, 80, 2, \"النبإ\", true, 582],\n  [5712, 46, 81, 2, \"النازعات\", true, 584],\n  [5758, 42, 24, 1, \"عبس\", true, 585],\n  [5800, 29, 7, 1, \"التكوير\", true, 586],\n  [5829, 19, 82, 1, \"الإنفطار\", true, 587],\n  [5848, 36, 86, 1, \"المطففين\", true, 588],\n  [5884, 25, 83, 1, \"الإنشقاق\", true, 589],\n  [5909, 22, 27, 1, \"البروج\", true, 590],\n  [5931, 17, 36, 1, \"الطارق\", true, 591],\n  [5948, 19, 8, 1, \"الأعلى\", true, 592],\n  [5967, 26, 68, 1, \"الغاشية\", true, 592],\n  [5993, 30, 10, 1, \"الفجر\", true, 593],\n  [6023, 20, 35, 1, \"البلد\", true, 594],\n  [6043, 15, 26, 1, \"الشمس\", true, 595],\n  [6058, 21, 9, 1, \"الليل\", true, 596],\n  [6079, 11, 11, 1, \"الضحى\", true, 596],\n  [6090, 8, 12, 1, \"الشرح\", true, 596],\n  [6098, 8, 28, 1, \"التين\", true, 597],\n  [6106, 19, 1, 1, \"العلق\", true, 597],\n  [6125, 5, 25, 1, \"القدر\", true, 598],\n  [6130, 8, 100, 1, \"البينة\", false, 599],\n  [6138, 8, 93, 1, \"الزلزلة\", false, 599],\n  [6146, 11, 14, 1, \"العاديات\", true, 600],\n  [6157, 11, 30, 1, \"القارعة\", true, 600],\n  [6168, 8, 16, 1, \"التكاثر\", true, 600],\n  [6176, 3, 13, 1, \"العصر\", true, 601],\n  [6179, 9, 32, 1, \"الهمزة\", true, 601],\n  [6188, 5, 19, 1, \"الفيل\", true, 601],\n  [6193, 4, 29, 1, \"قريش\", true, 602],\n  [6197, 7, 17, 1, \"الماعون\", true, 602],\n  [6204, 3, 15, 1, \"الكوثر\", true, 602],\n  [6207, 6, 18, 1, \"الكافرون\", true, 603],\n  [6213, 3, 114, 1, \"النصر\", false, 603],\n  [6216, 5, 6, 1, \"المسد\", true, 603],\n  [6221, 4, 22, 1, \"الإخلاص\", true, 604],\n  [6225, 5, 20, 1, \"الفلق\", true, 604],\n  [6230, 6, 21, 1, \"الناس\", true, 604],\n  [6236, 0, -1, -1, \"\", false, -1]\n]\n","import { SuraList } from \"./lists/surahList\"\nimport { Surah, SurahMeta } from \"./types\"\nimport { checkValidSurah } from \"./validation\"\n\n/**\n * Gets the metadata for the specified Surah.\n *\n * @param surah - The Surah to get the metadata for.\n * @returns The metadata for the specified Surah.\n */\nexport function getSurahMeta(surah: Surah): SurahMeta {\n  checkValidSurah(surah)\n  return SuraList[surah]\n}\n","import { getSurahMeta } from \"./getSurahMeta\"\nimport { Surah } from \"./types\"\n\n/**\n * Get the number of ayahs (verses) in the specified surah.\n * @param surah - The surah number.\n * @returns The number of ayahs in the specified surah.\n */\nexport function getAyaCountinSura(surah: Surah): number {\n  return getSurahMeta(surah)[1]\n}\n","import { meta } from \"./const\"\nimport { getAyaCountinSura } from \"./getAyaCountinSura\"\n\n/**\n * Checks if the given Surah (chapter) number is valid.\n *\n * @param surah - The Surah (chapter) number to check.\n * @param checkOnly - If true, the function will only check the validity and not throw an error.\n * @returns True if the Surah number is valid, false otherwise.\n */\nexport function checkValidSurah(surah: number, checkOnly = false): boolean {\n  if (typeof surah !== \"number\" || !Number.isInteger(surah)) {\n    if (checkOnly) return false\n    throw new TypeError(\"Ayah ID must be an integer\")\n  }\n\n  if (surah < 1 || surah > meta.numSuras) {\n    if (checkOnly) return false\n    throw new RangeError(\"Surah must be between 1 and \" + meta.numSuras)\n  }\n  return true\n}\n\n/**\n * Checks if the given Surah and Ayah (verse) numbers are valid.\n *\n * @param surah - The Surah (chapter) number to check.\n * @param ayah - The Ayah (verse) number to check.\n * @param checkOnly - If true, the function will only check the validity and not throw an error.\n * @returns True if the Surah and Ayah numbers are valid, false otherwise.\n */\nexport function checkValidSurahAyah(surah: number, ayah: number, checkOnly = false): boolean {\n  if (!checkValidSurah(surah, checkOnly)) return false\n\n  if (ayah < 1 || ayah > getAyaCountinSura(surah)) {\n    if (checkOnly) return false\n    throw new RangeError(\"Ayah must be between 1 and \" + getAyaCountinSura(surah))\n  }\n  return true\n}\n\n/**\n * Checks if the given Ayah (verse) ID is valid.\n *\n * @param ayahId - The Ayah (verse) ID to check.\n * @param checkOnly - If true, the function will only check the validity and not throw an error.\n * @returns True if the Ayah ID is valid, otherwise throws a RangeError.\n */\nexport function checkValidAyahId(ayahId: number, checkOnly = false): boolean {\n  if (typeof ayahId !== \"number\" || !Number.isInteger(ayahId)) {\n    if (checkOnly) return false\n    throw new TypeError(\"Ayah ID must be an integer\")\n  }\n  if (ayahId < 1 || ayahId > meta.numAyas) {\n    if (checkOnly) return false\n    throw new RangeError(\"Ayah ID must be between 1 and \" + meta.numAyas)\n  }\n  return true\n}\n","import { AyahNo, SurahAyahSegment } from \"./types\"\nimport { checkValidSurahAyah } from \"./validation\"\n\n/**\n *  Turns String of type \"x:y\" or \"x:y1-y2\" to array [x,y] or [x,[y1,y2]] respectively\n * @param str - String of type \"x:y\" or \"x:y1-y2\"\n * @returns array [x,y] or [x,[y1,y2]] respectively\n */\nexport function ayaStringSplitter(str: string): SurahAyahSegment {\n  const [surahStr, ayahsStr] = str.trim().split(\":\")\n  const surah = parseInt(surahStr, 10)\n\n  if (isNaN(surah)) {\n    throw \"Error in surah format \" + str\n  }\n\n  if (!ayahsStr) {\n    throw \"Error in data \" + str\n  }\n\n  let ayahs: AyahNo | [AyahNo, AyahNo]\n  if (ayahsStr.includes(\"-\")) {\n    ayahs = ayahsStr.split(\"-\").map((a) => {\n      const ayah = parseInt(a, 10)\n      if (isNaN(ayah) || ayah === 0) {\n        throw \"Error in ayah \" + a\n      }\n      return ayah\n    }) as [AyahNo, AyahNo]\n    if (ayahs[0] > ayahs[1]) throw \"Error in ayah range \" + str\n  }\n  else {\n    ayahs = parseInt(ayahsStr, 10)\n    if (isNaN(ayahs) || ayahs === 0) {\n      throw \"Error in data \" + str\n    }\n    checkValidSurahAyah(surah, ayahs)\n  }\n\n  return [surah, ayahs]\n}\n","import { getSurahMeta } from \"./getSurahMeta\"\nimport { AyahId, AyahNo, Surah } from \"./types\"\nimport { checkValidSurahAyah } from \"./validation\"\n\n/**\n * Get the ayah ID for the given surah and ayah number.\n * @param surah - The surah number.\n * @param ayah - The ayah number within the surah.\n * @returns The ayah ID for the given surah and ayah number.\n */\nexport function findAyaidBySurah(surah: Surah, ayah: AyahNo): AyahId {\n  checkValidSurahAyah(surah, ayah)\n  const [startAyahId] = getSurahMeta(surah)\n  return startAyahId + ayah\n}\n","import { AyahId } from \"../types\"\n\n// ------------------ Juz Data ---------------------\nexport const JuzList: AyahId[] = [\n  0, 1, 149, 260, 386, 517, 641, 751, 900, 1042, 1201, 1328, 1479, 1649, 1803,\n  2030, 2215, 2484, 2674, 2876, 3215, 3386, 3564, 3733, 4090, 4265, 4511, 4706,\n  5105, 5242, 5673, 6237\n]\n","import { JuzList } from \"./lists/juzList\"\nimport { AyahId, Juz } from \"./types\"\nimport { checkValidAyahId } from \"./validation\"\n\n/**\n * Finds the Juz (part) of the Quran that contains the given Ayah (verse) ID.\n *\n * @param ayaId - The ID of the Ayah (verse) to find the Juz for.\n * @returns The Juz (part) of the Quran that contains the given Ayah ID.\n */\nexport function findJuzByAyaid(ayaId: AyahId): Juz {\n  checkValidAyahId(ayaId)\n\n  return JuzList.findIndex(x => x > ayaId) - 1\n}\n","import { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { findJuzByAyaid } from \"./findJuzByAyaid\"\nimport { AyahId, AyahNo, Juz, Surah } from \"./types\"\nimport { checkValidSurahAyah } from \"./validation\"\n\n/**\n * Finds the Juz (part) of the Quran that the given Ayah (verse) belongs to.\n *\n * @param surah - The Surah (chapter) number.\n * @param ayah - The Ayah (verse) number. Defaults to 1 if not provided.\n * @param ayahMode - If true, the `ayah` parameter is treated as an Ayah ID instead of a Surah and Ayah number.\n * @returns The Juz (part) number that the given Ayah belongs to.\n */\nexport function findJuz(surah: Surah, ayah: AyahNo = 1, ayahMode = false): Juz {\n  const ayahId: AyahId = ayahMode\n    ? ayah\n    : ((checkValidSurahAyah(surah, ayah)\n      && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  return findJuzByAyaid(ayahId)\n}\n","import { SuraList } from \"./lists/surahList\"\nimport { AyahId, Surah, SurahAyah } from \"./types\"\nimport { checkValidAyahId } from \"./validation\"\n\n/**\n * Finds the Surah (chapter) and Ayah (verse) numbers that the given Ayah ID belongs to.\n *\n * @param ayaId - The Ayah ID to find the Surah and Ayah numbers for.\n * @returns An array containing the Surah number and the Ayah number within that Surah.\n */\nexport function findSurahByAyaid(ayaId: AyahId): SurahAyah {\n  checkValidAyahId(ayaId)\n\n  const suraNum: Surah = SuraList.findIndex(x => x[0] >= ayaId) - 1\n  return [suraNum, ayaId - SuraList[suraNum][0]]\n}\n","import { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { findJuzByAyaid } from \"./findJuzByAyaid\"\nimport { findSurahByAyaid } from \"./findSurahByAyaid\"\nimport { JuzList } from \"./lists/juzList\"\nimport { SuraList } from \"./lists/surahList\"\nimport { AyahId, AyahNo, Juz, Surah } from \"./types\"\nimport { checkValidAyahId, checkValidSurah } from \"./validation\"\n\n/**\n * Finds the juz (section) that contains the specified ayah (verse) and calculates the number of ayahs between the start of the juz and the start of the surah (chapter) that contains the ayah.\n *\n * @param surah - The surah (chapter) that contains the ayah.\n * @param ayah - The ayah (verse) number.\n * @param ayahMode - A boolean flag indicating whether the `ayah` parameter represents an ayah number or an ayah ID.\n * @returns An object containing the following properties:\n *   - `juz`: The juz (section) that contains the ayah.\n *   - `leftAyahId`: The ayah ID of the first ayah in the juz.\n *   - `ayahsBetweenJuzSurah`: The number of ayahs between the start of the juz and the start of the surah (positive if the surah starts is in the juz, negative if the surah starts before the juz).\n */\nexport function findJuzAndShift(\n  surah: Surah,\n  ayah: AyahNo,\n  ayahMode = false\n): {\n    juz: Juz\n    leftAyahId: AyahId\n    ayahsBetweenJuzSurah: number\n  } {\n  const ayahId: AyahId = ayahMode\n    ? ((checkValidAyahId(ayah) && ayah) as AyahId)\n    : ((checkValidSurah(surah) && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  const juz = findJuzByAyaid(ayahId)\n  const leftAyahId = JuzList[juz]\n  if (ayahMode) [surah] = findSurahByAyaid(ayahId)\n  const [surahStartAyahId] = SuraList[surah]\n  return {\n    juz,\n    ayahsBetweenJuzSurah: surahStartAyahId - leftAyahId + 1,\n    leftAyahId\n  }\n}\n","import { AyahId } from \"../types\"\n\n// ------------------ Hizb Data ---------------------\nexport const HizbQuarterList: AyahId[] = [\n  0, 1, 33, 51, 67, 82, 99, 113, 131, 149, 165, 184, 196, 210, 226, 240, 250,\n  260, 270, 279, 290, 308, 326, 345, 368, 386, 406, 426, 446, 464, 479, 494,\n  505, 517, 529, 551, 567, 581, 593, 607, 628, 641, 656, 670, 681, 696, 710,\n  720, 736, 751, 766, 778, 802, 825, 848, 863, 884, 900, 916, 930, 940, 955,\n  985, 1001, 1019, 1042, 1071, 1096, 1110, 1125, 1143, 1161, 1182, 1201, 1221,\n  1236, 1254, 1269, 1281, 1295, 1310, 1328, 1346, 1357, 1375, 1390, 1417, 1435,\n  1454, 1479, 1497, 1514, 1534, 1557, 1581, 1603, 1626, 1649, 1673, 1697, 1712,\n  1726, 1742, 1760, 1778, 1803, 1852, 1902, 1931, 1952, 1976, 1991, 2012, 2030,\n  2052, 2079, 2099, 2128, 2157, 2172, 2191, 2215, 2239, 2272, 2309, 2349, 2403,\n  2431, 2459, 2484, 2512, 2534, 2566, 2596, 2614, 2633, 2655, 2674, 2709, 2748,\n  2792, 2812, 2826, 2844, 2856, 2876, 2908, 2933, 2984, 3043, 3113, 3160, 3186,\n  3215, 3241, 3264, 3281, 3303, 3328, 3341, 3366, 3386, 3410, 3440, 3463, 3491,\n  3514, 3534, 3551, 3564, 3584, 3593, 3616, 3630, 3652, 3675, 3701, 3733, 3765,\n  3810, 3871, 3933, 3991, 4022, 4066, 4090, 4111, 4134, 4154, 4174, 4199, 4227,\n  4243, 4265, 4285, 4299, 4323, 4349, 4382, 4431, 4485, 4511, 4531, 4555, 4578,\n  4601, 4613, 4626, 4657, 4706, 4759, 4810, 4855, 4902, 4980, 5054, 5091, 5105,\n  5118, 5137, 5157, 5178, 5192, 5218, 5230, 5242, 5272, 5324, 5394, 5448, 5495,\n  5552, 5610, 5673, 5759, 5830, 5885, 5949, 6024, 6091, 6155, 6237\n]\n","import { findJuzByAyaid } from \"./findJuzByAyaid\"\nimport { HizbQuarterList } from \"./lists/hizbList\"\nimport { AyahId, JuzHizb } from \"./types\"\nimport { checkValidAyahId } from \"./validation\"\n\n/**\n * Finds the Juz, Hizb, and Hizb ID for the given Ayah ID.\n *\n * @param ayaId - The Ayah ID to find the Juz, Hizb, and Hizb ID for.\n * @returns An object containing the Juz, Hizb, and Hizb ID for the given Ayah ID.\n */\nexport function findJuzHizbByAyaid(ayaId: AyahId): JuzHizb {\n  checkValidAyahId(ayaId)\n\n  const juz = findJuzByAyaid(ayaId)\n  const quarterIndex = HizbQuarterList.findIndex(x => x > ayaId) - 1\n\n  const hizb = quarterIndex % 8 || 8\n  return { juz, hizb, id: quarterIndex }\n}\n","import { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { findJuzHizbByAyaid } from \"./findJuzHizbByAyaid\"\nimport { AyahId, AyahNo, JuzHizb, Surah } from \"./types\"\nimport { checkValidSurah } from \"./validation\"\n\n/**\n * Finds the Juz (part) and Hizb (section) of the Quran that the given Ayah (verse) belongs to.\n *\n * @param surah - The Surah (chapter) number.\n * @param ayah - The Ayah (verse) number. Defaults to 1 if not provided.\n * @param ayahMode - If true, the `ayah` parameter is treated as an Ayah ID instead of a Surah and Ayah number.\n * @returns An object containing the Juz (part) number, Hizb (section) number, and the index of the Hizb that the given Ayah belongs to.\n */\nexport function findJuzHizb(\n  surah: Surah,\n  ayah: AyahNo = 1,\n  ayahMode = false\n): JuzHizb {\n  const ayahId: AyahId = ayahMode\n    ? ayah\n    : ((checkValidSurah(surah) && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  return findJuzHizbByAyaid(ayahId)\n}\n","import { meta } from \"./const\"\nimport { findJuzAndShift } from \"./findJuzAndShift\"\nimport { findSurahByAyaid } from \"./findSurahByAyaid\"\nimport { JuzList } from \"./lists/juzList\"\nimport { AyahNo, Juz, JuzMeta, Surah } from \"./types\"\n\n/**\n * Finds the JuzMeta for a given Surah and Ayah.\n *\n * @param surah - The Surah (chapter) number.\n * @param ayah - The Ayah (verse) number.\n * @returns The JuzMeta object containing the left juz, ayahs between juz and surah, right juz, left ayah ID, and right ayah ID.\n */\nexport function findJuzMetaBySurah(surah: Surah, ayah: AyahNo = 1): JuzMeta {\n  const {\n    juz: leftjuz,\n    ayahsBetweenJuzSurah,\n    leftAyahId\n  } = findJuzAndShift(surah, ayah)\n\n  let rightJuz: Juz = leftjuz\n  while (\n    rightJuz < meta.numJuzs\n    && findSurahByAyaid(JuzList[rightJuz + 1])[0] === surah\n  ) {\n    rightJuz++\n  }\n\n  return {\n    leftjuz,\n    ayahsBetweenJuzSurah,\n    rightJuz,\n    leftAyahId,\n    rightAyahId: JuzList[rightJuz + 1]\n  }\n}\n","import { AyahId } from \"../types\"\n\nexport const PageList: AyahId[] = [\n  0, 1, 8, 13, 24, 32, 37, 45, 56, 65, 69, 77, 84, 91, 96, 101, 109, 113, 120,\n  127, 134, 142, 149, 153, 161, 171, 177, 184, 189, 194, 198, 204, 210, 218,\n  223, 227, 232, 238, 241, 245, 253, 256, 260, 264, 267, 272, 277, 282, 289,\n  290, 294, 303, 309, 316, 323, 331, 339, 346, 355, 364, 371, 377, 385, 394,\n  402, 409, 415, 426, 434, 442, 447, 451, 459, 467, 474, 480, 488, 494, 500,\n  505, 508, 513, 517, 520, 527, 531, 538, 545, 553, 559, 568, 573, 580, 585,\n  588, 595, 599, 607, 615, 621, 628, 634, 641, 648, 656, 664, 669, 672, 675,\n  679, 683, 687, 693, 701, 706, 711, 715, 720, 727, 734, 740, 746, 752, 759,\n  765, 773, 778, 783, 790, 798, 808, 817, 825, 834, 842, 849, 858, 863, 871,\n  880, 884, 891, 900, 908, 914, 921, 927, 932, 936, 941, 947, 955, 966, 977,\n  985, 992, 998, 1006, 1012, 1022, 1028, 1036, 1042, 1050, 1059, 1075, 1085,\n  1092, 1098, 1104, 1110, 1114, 1118, 1125, 1133, 1142, 1150, 1161, 1169, 1177,\n  1186, 1194, 1201, 1206, 1213, 1222, 1230, 1236, 1242, 1249, 1256, 1262, 1267,\n  1272, 1276, 1283, 1290, 1297, 1304, 1308, 1315, 1322, 1329, 1335, 1342, 1347,\n  1353, 1358, 1365, 1371, 1379, 1385, 1390, 1398, 1407, 1418, 1426, 1435, 1443,\n  1453, 1462, 1471, 1479, 1486, 1493, 1502, 1511, 1519, 1527, 1536, 1545, 1555,\n  1562, 1571, 1582, 1591, 1601, 1611, 1619, 1627, 1634, 1640, 1649, 1660, 1666,\n  1675, 1683, 1692, 1700, 1708, 1713, 1721, 1726, 1736, 1742, 1750, 1756, 1761,\n  1769, 1775, 1784, 1793, 1803, 1818, 1834, 1854, 1873, 1893, 1908, 1916, 1928,\n  1936, 1944, 1956, 1966, 1974, 1981, 1989, 1995, 2004, 2012, 2020, 2030, 2037,\n  2047, 2057, 2068, 2079, 2088, 2096, 2105, 2116, 2126, 2134, 2145, 2156, 2161,\n  2168, 2175, 2186, 2194, 2202, 2215, 2224, 2238, 2251, 2262, 2276, 2289, 2302,\n  2315, 2327, 2346, 2361, 2386, 2400, 2413, 2425, 2436, 2447, 2462, 2474, 2484,\n  2494, 2508, 2519, 2528, 2541, 2556, 2565, 2574, 2585, 2596, 2601, 2611, 2619,\n  2626, 2634, 2642, 2651, 2660, 2668, 2674, 2691, 2701, 2716, 2733, 2748, 2763,\n  2778, 2792, 2802, 2812, 2819, 2823, 2828, 2835, 2845, 2850, 2853, 2858, 2867,\n  2876, 2888, 2899, 2911, 2923, 2933, 2952, 2972, 2993, 3016, 3044, 3069, 3092,\n  3116, 3139, 3160, 3173, 3182, 3195, 3204, 3215, 3223, 3236, 3248, 3258, 3266,\n  3274, 3281, 3288, 3296, 3303, 3312, 3323, 3330, 3337, 3347, 3355, 3364, 3371,\n  3379, 3386, 3393, 3404, 3415, 3425, 3434, 3442, 3451, 3460, 3470, 3481, 3489,\n  3498, 3504, 3515, 3524, 3534, 3540, 3549, 3556, 3564, 3569, 3577, 3584, 3588,\n  3596, 3607, 3614, 3621, 3629, 3638, 3646, 3655, 3664, 3672, 3679, 3691, 3699,\n  3705, 3718, 3733, 3746, 3760, 3776, 3789, 3813, 3840, 3865, 3891, 3915, 3942,\n  3971, 3987, 3997, 4013, 4032, 4054, 4064, 4069, 4080, 4090, 4099, 4106, 4115,\n  4126, 4133, 4141, 4150, 4159, 4167, 4174, 4183, 4192, 4200, 4211, 4219, 4230,\n  4239, 4248, 4257, 4265, 4273, 4283, 4288, 4295, 4304, 4317, 4324, 4336, 4348,\n  4359, 4373, 4386, 4399, 4415, 4433, 4454, 4474, 4487, 4496, 4506, 4516, 4525,\n  4531, 4539, 4546, 4557, 4565, 4575, 4584, 4593, 4599, 4607, 4612, 4617, 4624,\n  4631, 4646, 4666, 4682, 4706, 4727, 4750, 4767, 4785, 4811, 4829, 4853, 4874,\n  4896, 4918, 4942, 4969, 4996, 5030, 5056, 5079, 5087, 5094, 5100, 5105, 5111,\n  5116, 5126, 5130, 5136, 5143, 5151, 5156, 5162, 5169, 5178, 5186, 5193, 5200,\n  5209, 5218, 5223, 5230, 5237, 5242, 5254, 5268, 5287, 5314, 5332, 5358, 5386,\n  5415, 5430, 5448, 5461, 5476, 5495, 5513, 5543, 5571, 5597, 5617, 5642, 5673,\n  5703, 5728, 5759, 5801, 5830, 5855, 5883, 5910, 5932, 5964, 5994, 6017, 6044,\n  6073, 6099, 6126, 6138, 6156, 6177, 6194, 6208, 6222, 6237\n]\n","import { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { PageList } from \"./lists/pageList\"\nimport { AyahId, AyahNo, Page, Surah } from \"./types\"\nimport { checkValidAyahId, checkValidSurah } from \"./validation\"\n\n/**\n * Finds the page number for the given Surah and Ayah number.\n *\n * @param surah - The Surah to find the page for.\n * @param ayah - The Ayah number to find the page for.\n * @param ayahMode - If true, the `ayah` parameter is treated as an AyahId instead of an AyahNo.\n * @returns The page number for the given Surah and Ayah.\n */\nexport function findPage(surah: Surah, ayah: AyahNo, ayahMode = false): Page {\n  const ayahId: AyahId = ayahMode\n    ? ((checkValidAyahId(ayah) && ayah) as AyahId)\n    : ((checkValidSurah(surah) && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  return PageList.findIndex(x => x > ayahId) - 1\n}\n","import { meta } from \"./const\"\nimport { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { findJuzByAyaid } from \"./findJuzByAyaid\"\nimport { findPage } from \"./findPage\"\nimport { JuzList } from \"./lists/juzList\"\nimport { PageList } from \"./lists/pageList\"\nimport { SuraList } from \"./lists/surahList\"\nimport { AyahId, AyahNo, Juz, Page, Surah, SurahAyah } from \"./types\"\nimport { checkValidSurah } from \"./validation\"\n\n/**\n * Finds a range of ayahs around a given ayah based on the specified mode.\n *\n * @param surah - The surah number (1-114)\n * @param ayah - The ayah number within the surah, or the absolute ayah ID if ayahMode is true\n * @param mode - The range mode: \"juz\", \"surah\", \"ayah\", \"page\", or \"all\"\n * @param ayahMode - If true, treats the ayah parameter as an absolute ayah ID\n * @returns A tuple containing the start and end ayah IDs of the range\n */\nexport function findRangeAroundAyah(\n  surah: Surah,\n  ayah: AyahNo,\n  mode: \"juz\" | \"surah\" | \"ayah\" | \"page\" | \"all\",\n  ayahMode = false\n): SurahAyah {\n  const ayahId: AyahId = ayahMode\n    ? ayah\n    : ((checkValidSurah(surah) && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  switch (mode) {\n    case \"juz\": {\n      const juz: Juz = findJuzByAyaid(ayahId)\n      return [JuzList[juz], JuzList[juz + 1] - 1]\n    }\n\n    case \"surah\": {\n      return [SuraList[surah][0] + 1, SuraList[surah + 1][0]]\n    }\n\n    case \"ayah\": {\n      return [ayahId, ayahId]\n    }\n    case \"page\": {\n      const page: Page = findPage(-1, ayahId, true)\n      return [PageList[page], PageList[page + 1] - 1]\n    }\n\n    case \"all\":\n    default:\n      return [1, meta.numAyas]\n  }\n}\n","/**\n * Performs a binary search on the given array to find the index of the specified element.\n *\n * @param ar - The array to search.\n * @param el - The element to search for.\n * @param compare_fn - An optional comparison function to use for the search. Defaults to a simple numeric comparison.\n * @returns The index of the element if found, or a negative value indicating the insertion point if not found.\n */\nexport function binarySearch(\n  ar: Array<number>,\n  el: number,\n  compare_fn: (a: number, b: number) => number = (a, b) => a - b\n): number {\n  let m = 0\n  let n = ar.length - 1\n  while (m <= n) {\n    const k = (n + m) >> 1\n    const cmp = compare_fn(el, ar[k])\n    if (cmp > 0) {\n      m = k + 1\n    }\n    else if (cmp < 0) {\n      n = k - 1\n    }\n    else {\n      return k\n    }\n  }\n  return -m - 1\n}\n","import { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { JuzList } from \"./lists/juzList\"\nimport { AyahId, AyahNo, Juz, Surah } from \"./types\"\nimport { binarySearch } from \"./utils\"\nimport { checkValidAyahId, checkValidSurah } from \"./validation\"\n\n/**\n * Returns the Juz (part) number that the given Ayah (verse) belongs to.\n *\n *\n * @param surah - The Surah (chapter) number.\n * @param ayah - The Ayah (verse) number.\n * @param ayahMode - If true, the `ayah` parameter is treated as an Ayah ID instead of a Surah and Ayah number.\n * @returns The Juz (part) number that the given Ayah belongs to. Returns Positive number if aya is first ayah of juz, number is juz number\n */\nexport function isAyahJuzFirst(\n  surah: Surah,\n  ayah: AyahNo,\n  ayahMode = false\n): Juz {\n  const ayahId: AyahId = ayahMode\n    ? ((checkValidAyahId(ayah) && ayah) as AyahId)\n    : ((checkValidSurah(surah) && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  return binarySearch(JuzList, ayahId)\n  // return JuzList.findIndex((x: AyahId) => x == ayahId)\n}\n","import { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { PageList } from \"./lists/pageList\"\nimport { AyahId, AyahNo, Juz, Surah } from \"./types\"\nimport { binarySearch } from \"./utils\"\nimport { checkValidAyahId, checkValidSurah } from \"./validation\"\n\n/**\n * Determines if the given ayah is the first ayah of a juz.\n *\n * @param surah - The surah number.\n * @param ayah - The ayah number.\n * @param ayahMode - Optional flag to indicate if the ayah number is already a valid ayah ID.\n * @returns The juz number if the ayah is the first ayah of the juz, otherwise -1.\n */\nexport function isAyahPageFirst(\n  surah: Surah,\n  ayah: AyahNo,\n  ayahMode = false\n): Juz {\n  const ayahId: AyahId = ayahMode\n    ? ((checkValidAyahId(ayah) && ayah) as AyahId)\n    : ((checkValidSurah(surah) && findAyaidBySurah(surah, ayah)) as AyahId)\n\n  return binarySearch(PageList, ayahId)\n  // return PageList.findIndex((x: AyahId) => x == ayahId)\n}\n","import { AyahId } from \"../types\"\n\n// ------------------ Manzil Data ---------------------\nexport const ManzilList: AyahId[] = [\n  0, 1, 670, 1365, 2030, 2933, 3789, 4631, 6237\n]\n","import { AyahId } from \"../types\"\n\n// ------------------ Ruku Data ---------------------\nexport const RukuList: AyahId[] = [\n  0, 1, 8, 15, 28, 37, 47, 54, 67, 69, 79, 90, 94, 104, 111, 120, 129, 137, 149,\n  155, 160, 171, 175, 184, 190, 196, 204, 218, 224, 229, 236, 239, 243, 250,\n  256, 261, 265, 268, 274, 281, 289, 291, 294, 303, 314, 324, 335, 348, 357,\n  365, 374, 385, 395, 403, 414, 423, 437, 442, 449, 465, 474, 483, 494, 504,\n  508, 516, 519, 527, 536, 544, 553, 564, 570, 581, 585, 590, 594, 598, 606,\n  609, 620, 628, 635, 646, 656, 665, 670, 675, 681, 689, 696, 704, 713, 720,\n  726, 736, 747, 756, 763, 770, 778, 785, 790, 800, 810, 820, 831, 840, 845,\n  850, 860, 872, 880, 884, 890, 900, 911, 919, 930, 934, 940, 944, 955, 965,\n  980, 986, 994, 1002, 1008, 1013, 1019, 1027, 1039, 1048, 1054, 1063, 1081,\n  1084, 1096, 1102, 1106, 1112, 1117, 1126, 1136, 1143, 1161, 1171, 1180, 1189,\n  1198, 1205, 1209, 1219, 1225, 1230, 1236, 1242, 1252, 1260, 1265, 1273, 1278,\n  1295, 1302, 1308, 1316, 1325, 1335, 1346, 1354, 1358, 1365, 1375, 1385, 1395,\n  1405, 1418, 1425, 1435, 1447, 1457, 1468, 1474, 1482, 1498, 1509, 1523, 1534,\n  1542, 1557, 1569, 1583, 1597, 1603, 1617, 1626, 1632, 1639, 1646, 1654, 1665,\n  1676, 1690, 1701, 1708, 1715, 1726, 1734, 1739, 1745, 1751, 1757, 1763, 1772,\n  1778, 1785, 1792, 1803, 1818, 1828, 1847, 1863, 1882, 1902, 1911, 1923, 1927,\n  1936, 1942, 1952, 1962, 1967, 1972, 1978, 1985, 1991, 2002, 2012, 2021, 2030,\n  2040, 2052, 2060, 2070, 2082, 2090, 2100, 2107, 2114, 2123, 2130, 2141, 2153,\n  2158, 2163, 2172, 2185, 2190, 2194, 2200, 2211, 2223, 2242, 2251, 2266, 2291,\n  2301, 2316, 2333, 2349, 2373, 2403, 2425, 2438, 2453, 2464, 2477, 2484, 2494,\n  2513, 2525, 2534, 2559, 2577, 2596, 2606, 2618, 2621, 2629, 2634, 2644, 2653,\n  2660, 2668, 2674, 2696, 2706, 2724, 2751, 2766, 2792, 2802, 2812, 2818, 2826,\n  2832, 2842, 2849, 2853, 2856, 2865, 2876, 2890, 2900, 2916, 2933, 2942, 2966,\n  2985, 3002, 3037, 3055, 3073, 3092, 3108, 3124, 3160, 3174, 3191, 3204, 3218,\n  3226, 3242, 3253, 3266, 3274, 3281, 3295, 3303, 3313, 3328, 3341, 3354, 3363,\n  3371, 3385, 3392, 3404, 3410, 3420, 3429, 3437, 3450, 3463, 3470, 3481, 3489,\n  3504, 3515, 3526, 3534, 3542, 3554, 3561, 3568, 3574, 3586, 3592, 3602, 3607,\n  3616, 3628, 3637, 3643, 3652, 3661, 3668, 3675, 3687, 3698, 3706, 3718, 3738,\n  3756, 3773, 3789, 3810, 3863, 3902, 3927, 3971, 3985, 3997, 4011, 4035, 4059,\n  4068, 4080, 4090, 4100, 4111, 4122, 4129, 4134, 4143, 4154, 4161, 4171, 4184,\n  4194, 4202, 4212, 4219, 4227, 4237, 4244, 4251, 4263, 4273, 4282, 4292, 4302,\n  4316, 4326, 4341, 4351, 4361, 4371, 4382, 4393, 4415, 4444, 4457, 4474, 4485,\n  4495, 4500, 4511, 4521, 4531, 4537, 4546, 4557, 4565, 4574, 4584, 4594, 4601,\n  4610, 4613, 4623, 4631, 4646, 4660, 4676, 4699, 4722, 4736, 4764, 4785, 4810,\n  4817, 4847, 4869, 4887, 4902, 4927, 4947, 4980, 5018, 5054, 5076, 5086, 5095,\n  5101, 5105, 5111, 5118, 5127, 5137, 5144, 5151, 5157, 5164, 5173, 5178, 5186,\n  5189, 5197, 5200, 5210, 5218, 5225, 5230, 5237, 5242, 5256, 5272, 5305, 5324,\n  5361, 5376, 5411, 5420, 5440, 5448, 5467, 5476, 5495, 5496, 5527, 5552, 5582,\n  5592, 5614, 5623, 5663, 5673, 5703, 5713, 5739, 5759, 5801, 5830, 5849, 5885,\n  5910, 5932, 5949, 5968, 5994, 6024, 6044, 6059, 6080, 6091, 6099, 6107, 6126,\n  6131, 6139, 6147, 6158, 6169, 6177, 6180, 6189, 6194, 6198, 6205, 6208, 6214,\n  6217, 6222, 6226, 6231, 6237\n]\n","import { Sajda } from \"../types\"\n\n// ------------------ Page Data ---------------------\n// code to get starting pages for surahs\n// let res=[];\n// Page.reduce((s,c,p)=>{\n// while (c[0]>=s)\n// {res.push([s,c[0],s==c[0]?p:p-1]);s+=1;}\n// return s\n// },0)\n// export Page from \"~/js/qdata-page.json\"\n// ------------------ Sajda Data ---------------------\nexport const SajdaList: Sajda[] = [\n  // [ayaId, type]\n  [1160, \"recommended\"],\n  [1722, \"recommended\"],\n  [1951, \"recommended\"],\n  [2138, \"recommended\"],\n  [2308, \"recommended\"],\n  [2613, \"recommended\"],\n  [2672, \"recommended\"],\n  [2915, \"recommended\"],\n  [3185, \"recommended\"],\n  [3518, \"obligatory\"],\n  [3994, \"recommended\"],\n  [4256, \"obligatory\"],\n  [4846, \"obligatory\"],\n  [5905, \"recommended\"],\n  [6125, \"obligatory\"]\n]\n","import { meta } from \"./const\"\nimport { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { findSurahByAyaid } from \"./findSurahByAyaid\"\nimport { AyahId, AyahNo, Surah, SurahAyah } from \"./types\"\n\n/**\n * Get the next ayah for the given surah and ayah number.\n * @param surah - The surah number.\n * @param ayah - The ayah number within the surah.\n * @returns The surah and ayah number of the next ayah.\n */\nexport function nextAyah(surah: Surah, ayah: AyahNo): SurahAyah {\n  if (surah < 1 || surah > meta.numSuras)\n    throw new RangeError(\"Surah must be between 1 and \" + meta.numSuras)\n\n  const ayaid: AyahId = findAyaidBySurah(surah, ayah)\n  return findSurahByAyaid(ayaid == meta.numAyas ? 1 : ayaid + 1)\n}\n","import { meta } from \"./const\"\nimport { findSurahByAyaid } from \"./findSurahByAyaid\"\nimport { PageList } from \"./lists/pageList\"\nimport { AyahId, Page, PageMeta } from \"./types\"\n\n/**\n * Retrieves metadata for a specific page of the Quran.\n *\n * @param pageNum - The page number to retrieve metadata for (1-604)\n * @returns An object containing the page number, first ayah, and last ayah on the page\n * @throws RangeError If the page number is not between 1 and 604\n */\nexport function pageMeta(pageNum: Page): PageMeta {\n  // todo rename to getPageMeta in next major version\n  if (pageNum < 1 || pageNum > meta.numPages)\n    throw new RangeError(\"pagenum must be between 1 and \" + meta.numPages)\n\n  const [curPage, nextPage]: [AyahId, AyahId] = [\n    PageList[pageNum],\n    PageList[pageNum + 1]\n  ]\n\n  return {\n    pageNum,\n    first: findSurahByAyaid(curPage),\n    last: [...findSurahByAyaid(nextPage - 1)]\n  }\n}\n","import { meta } from \"./const\"\nimport { findAyaidBySurah } from \"./findAyaidBySurah\"\nimport { findSurahByAyaid } from \"./findSurahByAyaid\"\nimport { AyahId, AyahNo, Surah, SurahAyah } from \"./types\"\nimport { checkValidSurah } from \"./validation\"\n\n/**\n * Get the previous ayah for the given surah and ayah number.\n * @param surah - The surah number.\n * @param ayah - The ayah number within the surah.\n * @returns The surah and ayah number of the previous ayah.\n */\nexport function prevAyah(surah: Surah, ayah: AyahNo): SurahAyah {\n  checkValidSurah(surah)\n\n  const ayaid: AyahId = findAyaidBySurah(surah, ayah)\n  return findSurahByAyaid(ayaid == 1 ? meta.numAyas : ayaid - 1)\n}\n","import { SuraName } from \"../types\"\nexport const suraNames: (SuraName | [])[] = [\n  [],\n  [\"Al-Faatiha\", \"The Opening\"],\n  [\"Al-Baqara\", \"The Cow\"],\n  [\"Aal-i-Imraan\", \"The Family of Imraan\"],\n  [\"An-Nisaa\", \"The Women\"],\n  [\"Al-Maaida\", \"The Table\"],\n  [\"Al-An'aam\", \"The Cattle\"],\n  [\"Al-A'raaf\", \"The Heights\"],\n  [\"Al-Anfaal\", \"The Spoils of War\"],\n  [\"At-Tawba\", \"The Repentance\"],\n  [\"Yunus\", \"Jonas\"],\n  [\"Hud\", \"Hud\"],\n  [\"Yusuf\", \"Joseph\"],\n  [\"Ar-Ra'd\", \"The Thunder\"],\n  [\"Ibrahim\", \"Abraham\"],\n  [\"Al-Hijr\", \"The Rock\"],\n  [\"An-Nahl\", \"The Bee\"],\n  [\"Al-Israa\", \"The Night Journey\"],\n  [\"Al-Kahf\", \"The Cave\"],\n  [\"Maryam\", \"Mary\"],\n  [\"Taa-Haa\", \"Taa-Haa\"],\n  [\"Al-Anbiyaa\", \"The Prophets\"],\n  [\"Al-Hajj\", \"The Pilgrimage\"],\n  [\"Al-Muminoon\", \"The Believers\"],\n  [\"An-Noor\", \"The Light\"],\n  [\"Al-Furqaan\", \"The Criterion\"],\n  [\"Ash-Shu'araa\", \"The Poets\"],\n  [\"An-Naml\", \"The Ant\"],\n  [\"Al-Qasas\", \"The Stories\"],\n  [\"Al-Ankaboot\", \"The Spider\"],\n  [\"Ar-Room\", \"The Romans\"],\n  [\"Luqman\", \"Luqman\"],\n  [\"As-Sajda\", \"The Prostration\"],\n  [\"Al-Ahzaab\", \"The Clans\"],\n  [\"Saba\", \"Sheba\"],\n  [\"Faatir\", \"The Originator\"],\n  [\"Yaseen\", \"Yaseen\"],\n  [\"As-Saaffaat\", \"Those drawn up in Ranks\"],\n  [\"Saad\", \"The letter Saad\"],\n  [\"Az-Zumar\", \"The Groups\"],\n  [\"Al-Ghaafir\", \"The Forgiver\"],\n  [\"Fussilat\", \"Explained in detail\"],\n  [\"Ash-Shura\", \"Consultation\"],\n  [\"Az-Zukhruf\", \"Ornaments of gold\"],\n  [\"Ad-Dukhaan\", \"The Smoke\"],\n  [\"Al-Jaathiya\", \"Crouching\"],\n  [\"Al-Ahqaf\", \"The Dunes\"],\n  [\"Muhammad\", \"Muhammad\"],\n  [\"Al-Fath\", \"The Victory\"],\n  [\"Al-Hujuraat\", \"The Inner Apartments\"],\n  [\"Qaaf\", \"The letter Qaaf\"],\n  [\"Adh-Dhaariyat\", \"The Winnowing Winds\"],\n  [\"At-Tur\", \"The Mount\"],\n  [\"An-Najm\", \"The Star\"],\n  [\"Al-Qamar\", \"The Moon\"],\n  [\"Ar-Rahmaan\", \"The Beneficent\"],\n  [\"Al-Waaqia\", \"The Inevitable\"],\n  [\"Al-Hadid\", \"The Iron\"],\n  [\"Al-Mujaadila\", \"The Pleading Woman\"],\n  [\"Al-Hashr\", \"The Exile\"],\n  [\"Al-Mumtahana\", \"She that is to be examined\"],\n  [\"As-Saff\", \"The Ranks\"],\n  [\"Al-Jumu'a\", \"Friday\"],\n  [\"Al-Munaafiqoon\", \"The Hypocrites\"],\n  [\"At-Taghaabun\", \"Mutual Disillusion\"],\n  [\"At-Talaaq\", \"Divorce\"],\n  [\"At-Tahrim\", \"The Prohibition\"],\n  [\"Al-Mulk\", \"The Sovereignty\"],\n  [\"Al-Qalam\", \"The Pen\"],\n  [\"Al-Haaqqa\", \"The Reality\"],\n  [\"Al-Ma'aarij\", \"The Ascending Stairways\"],\n  [\"Nooh\", \"Noah\"],\n  [\"Al-Jinn\", \"The Jinn\"],\n  [\"Al-Muzzammil\", \"The Enshrouded One\"],\n  [\"Al-Muddaththir\", \"The Cloaked One\"],\n  [\"Al-Qiyaama\", \"The Resurrection\"],\n  [\"Al-Insaan\", \"Man\"],\n  [\"Al-Mursalaat\", \"The Emissaries\"],\n  [\"An-Naba\", \"The Announcement\"],\n  [\"An-Naazi'aat\", \"Those who drag forth\"],\n  [\"Abasa\", \"He frowned\"],\n  [\"At-Takwir\", \"The Overthrowing\"],\n  [\"Al-Infitaar\", \"The Cleaving\"],\n  [\"Al-Mutaffifin\", \"Defrauding\"],\n  [\"Al-Inshiqaaq\", \"The Splitting Open\"],\n  [\"Al-Burooj\", \"The Constellations\"],\n  [\"At-Taariq\", \"The Morning Star\"],\n  [\"Al-A'laa\", \"The Most High\"],\n  [\"Al-Ghaashiya\", \"The Overwhelming\"],\n  [\"Al-Fajr\", \"The Dawn\"],\n  [\"Al-Balad\", \"The City\"],\n  [\"Ash-Shams\", \"The Sun\"],\n  [\"Al-Lail\", \"The Night\"],\n  [\"Ad-Dhuhaa\", \"The Morning Hours\"],\n  [\"Ash-Sharh\", \"The Consolation\"],\n  [\"At-Tin\", \"The Fig\"],\n  [\"Al-Alaq\", \"The Clot\"],\n  [\"Al-Qadr\", \"The Power, Fate\"],\n  [\"Al-Bayyina\", \"The Evidence\"],\n  [\"Az-Zalzala\", \"The Earthquake\"],\n  [\"Al-Aadiyaat\", \"The Chargers\"],\n  [\"Al-Qaari'a\", \"The Calamity\"],\n  [\"At-Takaathur\", \"Competition\"],\n  [\"Al-Asr\", \"The Declining Day, Epoch\"],\n  [\"Al-Humaza\", \"The Traducer\"],\n  [\"Al-Fil\", \"The Elephant\"],\n  [\"Quraish\", \"Quraysh\"],\n  [\"Al-Maa'un\", \"Almsgiving\"],\n  [\"Al-Kawthar\", \"Abundance\"],\n  [\"Al-Kaafiroon\", \"The Disbelievers\"],\n  [\"An-Nasr\", \"Divine Support\"],\n  [\"Al-Masad\", \"The Palm Fibre\"],\n  [\"Al-Ikhlaas\", \"Sincerity\"],\n  [\"Al-Falaq\", \"The Dawn\"],\n  [\"An-Naas\", \"Mankind\"]\n]\n","import { SuraName } from \"../types\"\nexport const suraNames: (SuraName | [])[] = [\n  [],\n  [\"Аль-Фатиха\", \"Открывающая Коран\"],\n  [\"Аль-Бакара\", \"Корова\"],\n  [\"Аль ‘Имран\", \"Семейство ‘Имрана\"],\n  [\"Ан-Ниса\", \"Женщины\"],\n  [\"Аль-Маида\", \"Трапеза\"],\n  [\"Аль-Ан‘ам\", \"Скот\"],\n  [\"Аль-А‘раф\", \"Ограды\"],\n  [\"Аль-Анфаль\", \"Военная добыча\"],\n  [\"Ат-Тауба\", \"Покаяние\"],\n  [\"Юнус\", \"Иона\"],\n  [\"Худ\", \"Худ\"],\n  [\"Юсуф\", \"Иосиф\"],\n  [\"Ар-Ра‘д\", \"Гром\"],\n  [\"Ибрахим\", \"Авраам\"],\n  [\"Аль-Хиджр\", \"Хиджр\"],\n  [\"Ан-Нахль\", \"Пчёлы\"],\n  [\"Аль-Исра\", \"Ночной перенос\"],\n  [\"Аль-Кяхф\", \"Пещера\"],\n  [\"Марьям\", \"Мария\"],\n  [\"Та, ха\", \"Та, ха\"],\n  [\"Аль-Анбия\", \"Пророки\"],\n  [\"Аль-Хаджж\", \"Хадж\"],\n  [\"Аль-Му’минун\", \"Верующие\"],\n  [\"Ан-Нур\", \"Свет\"],\n  [\"Аль-Фуркан\", \"Различение\"],\n  [\"Аш-Шу‘ара\", \"Поэты\"],\n  [\"Ан-Намль\", \"Муравьи\"],\n  [\"Аль-Касас\", \"Рассказ\"],\n  [\"Аль-‘Анкабут\", \"Паук\"],\n  [\"Ар-Рум\", \"Ромеи\"],\n  [\"Лукман\", \"Лукман\"],\n  [\"Ас-Саджда\", \"Земной поклон\"],\n  [\"Аль-Ахзаб\", \"Полчища\"],\n  [\"Саба’\", \"Сава\"],\n  [\"Фатыр\", \"Зиждитель\"],\n  [\"Йа, син\", \"Йа, син\"],\n  [\"Ас-Саффат\", \"Стоящие в ряд\"],\n  [\"Сад\", \"Сад\"],\n  [\"Аз-Зумар\", \"Толпы\"],\n  [\"Гафир\", \"Прощающий\"],\n  [\"Фуссылят\", \"Разъяснены\"],\n  [\"Аш-Шура\", \"Совет\"],\n  [\"Аз-Зухруф\", \"Украшения\"],\n  [\"Ад-Духан\", \"Дым\"],\n  [\"Аль-Джасия\", \"Коленопреклонённые\"],\n  [\"Аль-Ахкаф\", \"Барханы\"],\n  [\"Мухаммад\", \"Мухаммад\"],\n  [\"Аль-Фатх\", \"Победа\"],\n  [\"Аль-Худжурат\", \"Покои\"],\n  [\"Каф\", \"Каф\"],\n  [\"Аз-Зарият\", \"Рассеивающие\"],\n  [\"Ат-Тур\", \"Гора\"],\n  [\"Ан-Наджм\", \"Звезда\"],\n  [\"Аль-Камар\", \"Луна\"],\n  [\"Ар-Рахман\", \"Милостивый\"],\n  [\"Аль-Ваки‘а\", \"Неизбежное\"],\n  [\"Аль-Хадид\", \"Железо\"],\n  [\"Аль-Муджадиля\", \"Препирающаяся\"],\n  [\"Аль-Хашр\", \"Сбор\"],\n  [\"Аль-Мумтахана\", \"Испытуемая\"],\n  [\"Ас-Сафф\", \"Ряд\"],\n  [\"Аль-Джуму‘а\", \"Собрание\"],\n  [\"Аль-Мунафикун\", \"Лицемеры\"],\n  [\"Ат-Тагабун\", \"Обделение\"],\n  [\"Ат-Таляк\", \"Развод\"],\n  [\"Ат-Тахрим\", \"Запрещение\"],\n  [\"Аль-Мульк\", \"Власть\"],\n  [\"Аль-Калям\", \"Перо\"],\n  [\"Аль-Хакка\", \"Неминуемое\"],\n  [\"Аль-Ма‘аридж\", \"Степени\"],\n  [\"Нух\", \"Ной\"],\n  [\"Аль-Джинн\", \"Джинны\"],\n  [\"Аль-Муззаммиль\", \"Закутавшийся\"],\n  [\"Аль-Муддассир\", \"Завернувшийся\"],\n  [\"Аль-Кияма\", \"Воскресение\"],\n  [\"Аль-Инсан\", \"Человек\"],\n  [\"Аль-Мурсалят\", \"Посылаемые\"],\n  [\"Ан-Наба’\", \"Весть\"],\n  [\"Ан-Нази‘ат\", \"Вырывающие\"],\n  [\"‘Абаса\", \"Нахмурился\"],\n  [\"Ат-Таквир\", \"Сворачивание\"],\n  [\"Аль-Инфитар\", \"Раскалывание\"],\n  [\"Аль-Мутаффифин\", \"Обвешивающие\"],\n  [\"Аль-Иншикак\", \"Разверзнется\"],\n  [\"Аль-Бурудж\", \"Созвездия\"],\n  [\"Ат-Тарик\", \"Ночной гость\"],\n  [\"Аль-А‘ля\", \"Всевышний\"],\n  [\"Аль-Гашия\", \"Покрывающее\"],\n  [\"Аль-Фаджр\", \"Заря\"],\n  [\"Аль-Баляд\", \"Город\"],\n  [\"Аш-Шамс\", \"Солнце\"],\n  [\"Аль-Лейль\", \"Ночь\"],\n  [\"Ад-Духа\", \"Утро\"],\n  [\"Аль-Инширах\", \"Раскрытие\"],\n  [\"Ат-Тин\", \"Смоковница\"],\n  [\"Аль-‘Аляк\", \"Сгусток крови\"],\n  [\"Аль-Кадр\", \"Величие\"],\n  [\"Аль-Баййина\", \"Ясный довод\"],\n  [\"Аз-Зальзаля\", \"Сотрясение\"],\n  [\"Аль-‘Адият\", \"Скачущие\"],\n  [\"Аль-Кари‘а\", \"Поражающее\"],\n  [\"Ат-Такясур\", \"Соперничество\"],\n  [\"Аль-‘Аср\", \"Предвечернее время\"],\n  [\"Аль-Хумаза\", \"Хулитель\"],\n  [\"Аль-Филь\", \"Слон\"],\n  [\"Курайш\", \"Курайшиты\"],\n  [\"Аль-Ма‘ун\", \"Утварь\"],\n  [\"Аль-Каусар\", \"Каусар\"],\n  [\"Аль-Кяфирун\", \"Неверующие\"],\n  [\"Ан-Наср\", \"Помощь\"],\n  [\"Аль-Масад\", \"Пальмовые волокна\"],\n  [\"Аль-Ихляс\", \"Очищение веры\"],\n  [\"Аль-Фаляк\", \"Рассвет\"],\n  [\"Ан-Нас\", \"Люди\"]\n]\n"],"names":["suraNames"],"mappings":"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AAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,E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AAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,E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AAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,EAAE,IAAI;EACN,E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"}